<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-employee-by-Id-flow-suite.xml" />
	<munit:test name="get-employee-by-Id-success-test-case-with-data" doc:id="94608d48-f46a-4b46-b4d8-45c79232b59b" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="da14dc44-8369-465d-a74b-bf671e603377" >
				<munit:attributes value="#[readUrl('classpath://get_employee_by_id_data_return\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="53a45b8f-49ca-436f-8100-2dd7ee8633ad" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ea94441a-1079-475e-acc2-92ffccb870bc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;&#10;output application/json&#10;---&#10; {&#10;    "emp_status": "A",&#10;    "emp_name": "Dereje",&#10;    "emp_address": "USA",&#10;    "emp_id": 100&#10;  }&#10;&#10;]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-employee-by-Id-flow" doc:id="122ae8b5-d32a-4253-b904-4e2aa3507e80" name="get-employee-by-Id-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d594e7a7-f27a-4844-b441-21324bc372c5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import get_employee_by_id_data_return::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-employee-by-Id-success-test-case-with-no-data" doc:id="c4b128bd-5c39-40b6-bb73-b66a26a7f346">
			<munit:behavior>
				<munit:set-event doc:name="Set Input" doc:id="113c7cd3-b3d2-4f80-8652-0d5224f3dd3c">
					<munit:attributes value="#[readUrl('classpath://get_employee_by_id_no_data_return\set-event_attributes.dwl')]" />
				</munit:set-event>
				<munit-tools:mock-when doc:name="Mock when" doc:id="55554986-131a-416f-8204-022110962dc4" processor="db:select">
					<munit-tools:with-attributes>
						<munit-tools:with-attribute whereValue="ea94441a-1079-475e-acc2-92ffccb870bc" attributeName="doc:id" />
					</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;{&#10;	&#10;}&#10;&#10;]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="Flow-ref to get-employee-by-Id-flow" doc:id="b875d7af-cc71-449d-a2c8-1ee19982ea1b" name="get-employee-by-Id-flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert doc:name="Assert payload" doc:id="8818d1f7-f187-4d3f-8c98-cb1740879a77" message="The payload does not match">
					<munit-tools:that><![CDATA[#[%dw 2.0
import get_employee_by_id_no_data_return::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
				</munit-tools:assert>
			</munit:validation>
		</munit:test>


</mule>
